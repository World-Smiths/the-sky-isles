name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Substitute the URLs in the module.json
      - name: Substitute in Module Manifest
        id: sub_module_manifest
        if: "!github.event.release.prerelease"
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{github.event.release.tag_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Substitute the URLs in the world.json
      - name: Substitute in World Manifest
        id: sub_world_manifest
        if: "!github.event.release.prerelease"
        uses: microsoft/variable-substitution@v1
        with:
          files: "world.json"
        env:
          version: ${{github.event.release.tag_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/world.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/world.zip

      # Pre-release: substitute the URLs in the module.json
      - name: Pre-release - Substitute in Module Manifest
        id: pre_sub_module_manifest
        if: "github.event.release.prerelease"
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{github.event.release.tag_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://raw.githubusercontent.com/${{github.repository}}/next/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Pre-release: substitute the URLs in the world.json
      - name: Pre-release - Substitute in World Manifest
        id: pre_sub_world_manifest
        if: "github.event.release.prerelease"
        uses: microsoft/variable-substitution@v1
        with:
          files: "world.json"
        env:
          version: ${{github.event.release.tag_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://raw.githubusercontent.com/${{github.repository}}/next/world.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/world.zip

      # Create a zip file with all files required to add to the release
      - run: zip -r ./module.zip module.json README.md LICENSE OGL.txt CHANGELOG.md styles/ scripts/ scenes/ journals/ actors/ packs/ audio/
      - run: zip -r ./world.zip world.json README.md LICENSE OGL.txt CHANGELOG.md styles/ scripts/ scenes/ journals/ actors/ data/ audio/ 

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./world.json, ./module.zip, ./world.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      # Pre-release: update next branch
      - name: Prepare repository
        id: prep_repo
        if: "github.event.release.prerelease"
        run: |
          git config --global user.name '${{github.actor}}'
          git config --global user.email '${{github.actor}}@users.noreply.github.com'
          git add module.json world.json
          git stash
          git clean -f
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY"
          git fetch origin "next"
          git switch -c "next" "origin/next"
          git checkout stash module.json world.json
          git commit -m "${{github.event.release.tag_name}} manifest"
          git push -f

      # Autopublish to the Foundry Admin panel
      - name: AutoPublish Module
        id: pub_module
        if: "!github.event.release.prerelease"
        uses: Varriount/fvtt-autopublish@v1.0.9
        with:
          username: ${{ secrets.FOUNDRY_ADMIN_USER }}
          password: ${{ secrets.FOUNDRY_ADMIN_PW }}
          module-id: ${{ secrets.FOUNDRY_ADMIN_MODULE_ID }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
          manifest-file: ./module.json

      - name: AutoPublish World
        id: pub_world
        if: "!github.event.release.prerelease"
        uses: Varriount/fvtt-autopublish@v1.0.9
        with:
          username: ${{ secrets.FOUNDRY_ADMIN_USER }}
          password: ${{ secrets.FOUNDRY_ADMIN_PW }}
          module-id: ${{ secrets.FOUNDRY_ADMIN_WORLD_ID }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/world.json
          manifest-file: ./world.json
